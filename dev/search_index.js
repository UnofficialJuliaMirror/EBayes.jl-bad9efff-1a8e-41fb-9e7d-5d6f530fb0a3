var documenterSearchIndex = {"docs":
[{"location":"#EBayes.jl-1","page":"Home","title":"EBayes.jl","text":"","category":"section"},{"location":"#Introduction-1","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"A package for empirical Bayes (EB) estimation in Julia. Currently the main functionality is estimation in the Gaussian compound decision problem in which we observe:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Z_i sim mathcalN(mu_i sigma_i^2) i=1dotscn","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Z_i is observed, sigma^2 is assumed to be known and mu is unknown. The goal is to use all Z_i and potential covariates X_i to design estimators hatmu_i of mu_i such that sum_i mathbbEleft(mu_i - hatmu_i)^2right is small.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"A longer term goal of this package is to provide a unified interface for EB method development and application.","category":"page"},{"location":"#SURE-EB-estimator-1","page":"Home","title":"SURE EB estimator","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Let us generate toy data:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using Random\nRandom.seed!(1)\n\nn = 10000\nσs = fill(1.0, n)\nμs = randn(n) .* σs\nZs = μs .+ randn(n)\nnothing  # hide","category":"page"},{"location":"#","page":"Home","title":"Home","text":"We first check the mean squared error if we try to estimate mu_i by Z_i:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using StatsBase\nmean( (μs - Zs).^2 )","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Instead let us use the Normal SURE method of Xie, Kou, and Brown (2012), which has been implemented in this package. To do this, we will first need to wrap the Zs and σs as NormalSamples.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using EBayes\nss = NormalSamples(Zs, σs)\nsure_fit = fit(Normal(), SURE(), ss)\nsure_pred = predict(sure_fit)\n\nmean( (μs - sure_pred).^2 )","category":"page"},{"location":"#EB-CrossFit-estimator-1","page":"Home","title":"EB CrossFit estimator","text":"","category":"section"},{"location":"#Empirical-Bayes-sample-types-1","page":"Home","title":"Empirical Bayes sample types","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"NormalSample","category":"page"},{"location":"#EBayes.NormalSample","page":"Home","title":"EBayes.NormalSample","text":"NormalSample(Z,σ)\n\nA observed sample Z drawn from a Normal distribution with known variance sigma^2  0.\n\nZ sim mathcalN(mu sigma^2)\n\nmu is assumed unknown. The type above is used when the sample Z is to be used for estimation or inference of mu.\n\nNormalSample(0.5, 1.0)          #Z=0.5, σ=1\n\n\n\n\n\n","category":"type"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"}]
}
